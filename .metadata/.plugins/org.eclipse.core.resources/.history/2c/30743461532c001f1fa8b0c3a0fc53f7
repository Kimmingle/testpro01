package com.kh.spring.master.controller;

import javax.servlet.http.HttpServletRequest;


import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kh.spring.master.model.service.MemberService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;


//@controller: 범용적인 컨트롤러

@Controller
@Slf4j
@RequiredArgsConstructor
public class MemberController {
	
	private final MemberService memberService;
	
//	@RequestMapping("/login.do")  //request mapping 타입의 handlermapping 등록
//	public void login() {
//		log.info("로그인 요청 보냄?");
//	}
//	





/*
 * spring에서 Handler가 전달값을 받는 방법
 *  1.HttpServletRequest를 이용해서 전달받기 (기존의 JSP/Servlet방식)
 *  
 *  @RequestMapping("/login.do") 
	public String login(HttpServletRequest request){
		String userId = request.getParameter("id");
		String userPwd = request.getParameter("pwd");
		
		log.info("회원이 입력한 아이디 값 : {}", userId);
		log.info("회원이 입력한 비밀번호 값 : {}", userPwd);
  		
  
  		return "main";
	}
 * 
 *  2.RequestParam 애노테이션을 이용하는 방법
 *   -- request.getParameter("키값")로 value를 뽑아오는 역할을 대신 해주는 애노테이션
 *   
 *  3. RequestParam애노테이션을 생략하는 방법
 *  -- 단, 매개변수 식별자를 jsp의 name속성값(요청시 전달하는 값의 키값)과 동일하게 작성해주어야만 자동으로 같이 주입됨
 *  	단점이라고한다면 2의 defaultValue속성을 사용할 수 없음
 *  
 *  
 *  @RequestMapping("/login.do") 
	public String login(String id, String pwd){
		
		log.info("회원이 입력한 아이디 값 : {}", id);
		log.info("회원이 입력한 비밀번호 값 : {}", pwd);
  		return "main";
	}
 *  
 */
	@RequestMapping("/login.do") 
	public String login(String id, String pwd){
		
		log.info("회원이 입력한 아이디 값 : {}", id);
		log.info("회원이 입력한 비밀번호 값 : {}", pwd);
  		return "main";
	}
 

}
